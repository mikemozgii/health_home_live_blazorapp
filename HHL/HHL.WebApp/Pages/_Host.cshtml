@page "/"
@namespace HHL.WebApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HHL.WebApp</title>
    <base href="~/" />
    <link href="//fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" rel="stylesheet">

    <link href="~/css/animate.css" rel="stylesheet" />
    <link href="~/css/font-awesome/css/all.min.css" rel="stylesheet" />
    <link href="~/css/core.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />

</head>
<body>
    <app>@(await Html.RenderComponentAsync<App>())</app>


    <script src="_framework/blazor.server.js"></script>
    @*<script src="~/blazor.server.js"></script>*@
    <script src="~/FileReaderComponent.js"></script>
    <script>
        Blazor.start({
            configureSignalR: function (builder) {
                builder.configureLogging(2); // LogLevel.Information
            },
            logLevel: 2 // LogLevel.Information
        }).then(function () {
            window['__aspnetcore__testing__blazor__started__'] = true;
        });
    </script>
    <script>
        //Blazor.start({
        //    configureSignalR: function (builder) {
        //        builder.configureLogging(2);


        //    }
        //});

        //Blazor.start({
        //    configureSignalR: function (builder) {
        //        builder.configureLogging(2); // LogLevel.Information
        //    },
        //    logLevel: 2 // LogLevel.Information
        //});
    </script>

    <script>
        window.TriggerClientClick = (elementId) => {
            return document.getElementById(elementId).click();
        };

        window.RemoveElementClass = (elementId, className) => {
            var element = document.getElementById(elementId);
            element.classList.remove(className);

        };

        window.AddElementClass = (elementId, className, timeout) => {


            if (timeout) {

                setTimeout(function () {
                    var element = document.getElementById(elementId);
                    element.classList.add(className);
                }, timeout);
            }
            else {

                var element = document.getElementById(elementId);
                element.classList.add(className);
            }

        };


        window.GetCookie = (name) => {
            var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
            return v ? v[2] : null;
        };

        window.SetCookie = (name, value, days) => {
            var d = new Date;
            d.setTime(d.getTime() + 24 * 60 * 60 * 1000 * days);
            document.cookie = name + "=" + value + ";path=/;expires=" + d.toGMTString();
        };

        window.DeleteCookie = (name) => {
            window.SetCookie(name, '', -1);
        };



    </script>

    <script>
        document.write(
            '<script src="http://' +
            (location.host || '${1:localhost}').split(':')[0] +
            ':${2:5001}/livereload.js?snipver=1"></' +
            'script>'
        );
    </script>
</body>
</html>
