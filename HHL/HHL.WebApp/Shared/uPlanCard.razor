

<div class="card shadow-sm" style="border-radius: 5px;">
    <div class="card-header bg-@Color font-white px-30 pt-30 pb-80" style="border-top-left-radius : 5px;border-top-right-radius: 5px;position:relative;">
        <h4 class="mb-1 font-weight-normal-bold">@Title</h4>

        @if (Price == 0)
        {
            <span class="font-weight-normal-bold">
                <span class="font-weight-semi-bold" style="font-size: 42px;">Free</span>
            </span>
        }
        else
        {

            if (PriceDiscounted > 0)
            {
    <span class="font-weight-normal-bold">
        <span class="" style="vertical-align:top; font-size:16px;">$</span>
        <span class="" style="vertical-align:top; text-decoration:line-through; font-size:16px;">@Price.ToString("##.00")</span>
        <span class="font-weight-semi-bold" style="font-size: 42px;">@((Price - PriceDiscounted).ToString("##.00"))</span>
        <span>@(IsYearly ? "/year" : "/month")</span>
    </span>
            }
            else
            {

                <span class="font-weight-normal-bold">
                    <span class="" style="vertical-align:top; font-size:16px;">$</span>
                    <span class="font-weight-semi-bold" style="font-size: 42px;">@Price.ToString("##.00")</span>
                    <span>@(IsYearly ? "/year" : "/month") </span>
                </span>
            }


        }



        <div class="position-absolute right-0 bottom-0 left-0" style="position:absolute; left:0; right:0; bottom:0;">
            <figure class="mb-0" style="margin: 0">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="none" x="0px" y="0px" viewBox="0 0 300 100" style="enable-background:new 0 0 300 100;margin-bottom: -7px;" xml:space="preserve" class="">
<style type="text/css">
    .wave-bottom-1-0 {
        clip-path: url(#waveBottom1ID2);
        fill: #FFFFFF;
    }

    .wave-bottom-1-1 {
        clip-path: url(#waveBottom1ID2);
        fill: #FFFFFF;
        fill-opacity: 0;
    }

    .wave-bottom-1-2 {
        clip-path: url(#waveBottom1ID2);
        fill: #FFFFFF;
    }
</style>
<g>
                <defs>
                <rect id="waveBottom1ID1" width="300" height="100"></rect>
	</defs>
                <clipPath id="waveBottom1ID2">
                <use xlink:href="#waveBottom1ID1" style="overflow:visible;"></use>
	</clipPath>
                <path class="wave-bottom-1-0 fill-white" opacity=".4" d="M10.9,63.9c0,0,42.9-34.5,87.5-14.2c77.3,35.1,113.3-2,146.6-4.7C293.7,41,315,61.2,315,61.2v54.4H10.9V63.9z"></path>
                <path class="wave-bottom-1-0 fill-white" opacity=".4" d="M-55.7,64.6c0,0,42.9-34.5,87.5-14.2c77.3,35.1,113.3-2,146.6-4.7c48.7-4.1,69.9,16.2,69.9,16.2v54.4H-55.7   V64.6z"></path>
                <path class="wave-bottom-1-1 fill-white" opacity=".4" d="M23.4,118.3c0,0,48.3-68.9,109.1-68.9c65.9,0,98,67.9,98,67.9v3.7H22.4L23.4,118.3z"></path>
                <path class="wave-bottom-1-2 fill-white" d="M-54.7,83c0,0,56-45.7,120.3-27.8c81.8,22.7,111.4,6.2,146.6-4.7c53.1-16.4,104,36.9,104,36.9l1.3,36.7l-372-3   L-54.7,83z"></path>
</g>
</svg>
            </figure>
        </div>
    </div>

    <!-- Content -->
    <div class="pt-0 px-30 pb-30" style="position:relative">

        @foreach (var item in Items)
        {

            @if (item.StartsWith("-"))
            {

        <div class="py-7 font-size-12">
            <uButton IsRoundedCircle="true" Color="red" Size="btn-xs" isIcon="true" CustomStyle="width:24px;height:24px;font-size:12px;" CustomClass="mr-15" isSoft="true" IsTransition="false">
                <uFontAwesomeIcon Thickness="s" Size="12px" Icon="minus" />
            </uButton>
            @item.Substring(1)
        </div>
            }
            else
            {

                <div class="py-7 font-size-12">
                    <uButton IsRoundedCircle="true" Color="@Color" Size="btn-xs" isIcon="true" CustomStyle="width:24px;height:24px;font-size:12px;" CustomClass="mr-15" isSoft="true" IsTransition="false">
                        <uFontAwesomeIcon Thickness="s" Size="12px" Icon="check" />
                    </uButton>
                    @item
                </div>
            }

        }



        @if (!IsSelected)
        {
            <uButton Size="btn-sm" Color="@Color" isSoft="true" CustomClass="mt-25" CustomOnClickv2="@CustomOnClickv2" CustomStyle="width:100%;" Title="Select" />
        }
        else
        {
            <div style="text-align: center;margin-top:24px" class="py-10" ><uFontAwesomeIcon Thickness="s" Size="16px" Color="green" Icon="check" /> <span class="pl-5">Current</span> </div>
        }


    </div>
    <!-- End Content -->
</div>





@functions {
    [Parameter]
    private string Title { get; set; } = "r";

    [Parameter]
    private IEnumerable<string> Items { get; set; }

    [Parameter]
    private decimal Price { get; set; }

    [Parameter]
    private string Color { get; set; }

    [Parameter]
    private decimal PriceDiscounted { get; set; }

    [Parameter]
    private bool IsYearly { get; set; }

    [Parameter]
    private bool IsSelected { get; set; } = false;
    
    [Parameter]
    private EventCallback<UIMouseEventArgs> CustomOnClickv2 { get; set; }

    protected override async Task OnInitializedAsync()
    {


    }
}